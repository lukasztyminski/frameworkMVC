@mixin position ($position: relative, $coordinates: 0 0 0 0) {
    @if type-of($position) == list {
        $coordinates: $position;
        $position: relative;
    }

    $top: nth($coordinates, 1);
    $right: nth($coordinates, 2);
    $bottom: nth($coordinates, 3);
    $left: nth($coordinates, 4);

    position: $position;

    @if $top == auto {
        top: $top;
    }
    @else if not(unitless($top)) {
        top: $top;
    }
    @if $right == auto {
        right: $right;
    }
    @else if not(unitless($right)) {
        right: $right;
    }
    @if $bottom == auto {
        bottom: $bottom;
    }
    @else if not(unitless($bottom)) {
        bottom: $bottom;
    }
    @if $left == auto {
        left: $left;
    }
    @else if not(unitless($left)) {
        left: $left;
    }
}

@mixin fixed {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
}

@mixin margin-auto {
    margin: {
        left: auto;
        right: auto;
    }
}

@mixin center($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}
@else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
}
@else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}
}

@mixin background-gradient($start-color, $end-color, $orientation) {
    background: $start-color;

    @if $orientation == 'vertical' {
      background: -webkit-linear-gradient(top, $start-color, $end-color);
      background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
      background: -webkit-linear-gradient(left, $start-color, $end-color);
      background: linear-gradient(to right, $start-color, $end-color);
  } @else {
      background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
      background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

@mixin screen($size) {
  $desktop_hd: "(min-width: 1920px)";
  $desktop_xxl: "(min-width: 1680px)";
  $desktop_xl: "(min-width: 1400px)";
  $desktop_l: "(min-width: 1200px)";
  $desktop: "(min-width: 1024px)";
  $tablet: "(min-width: 768px)";
  $mobile: "(min-width: 460px)";
  @if $size == desktop_hd {
    @media only screen and #{$desktop_hd} {
      @content;
  }
}
@else if $size == desktop_xxl {
    @media only screen and #{$desktop_xxl} {
      @content;
  }
}
@else if $size == desktop_xl {
    @media only screen and #{$desktop_xl} {
      @content;
  }
}
@else if $size == desktop_l {
    @media only screen and #{$desktop_l} {
      @content;
  }
}
@else if $size == desktop {
    @media only screen and #{$desktop} {
      @content;
  }
}
@else if $size == tablet {
    @media only screen and #{$tablet} {
      @content;
  }
}
@else if $size == mobile {
    @media only screen and #{$mobile} {
      @content;
  }
}
@else {
    @media only screen and #{$size} {
      @content;
  }
}
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}